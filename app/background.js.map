{"version":3,"file":"background.js","mappings":"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","sources":["webpack://empire-framework-gui/webpack/bootstrap","webpack://empire-framework-gui/webpack/runtime/compat get default export","webpack://empire-framework-gui/webpack/runtime/define property getters","webpack://empire-framework-gui/webpack/runtime/hasOwnProperty shorthand","webpack://empire-framework-gui/external node-commonjs \"path\"","webpack://empire-framework-gui/external node-commonjs \"url\"","webpack://empire-framework-gui/external commonjs \"electron\"","webpack://empire-framework-gui/./src/menu/dev_menu_template.js","webpack://empire-framework-gui/./src/menu/edit_menu_template.js","webpack://empire-framework-gui/external commonjs \"fs-jetpack\"","webpack://empire-framework-gui/./src/helpers/window.js","webpack://empire-framework-gui/external commonjs \"env\"","webpack://empire-framework-gui/./src/background.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron\");","import { app, BrowserWindow } from \"electron\";\n\nexport const devMenuTemplate = {\n  label: \"Development\",\n  submenu: [\n    {\n      label: \"Reload\",\n      accelerator: \"CmdOrCtrl+R\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.reloadIgnoringCache();\n      }\n    },\n    {\n      label: \"Toggle DevTools\",\n      accelerator: \"Alt+CmdOrCtrl+I\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().toggleDevTools();\n      }\n    },\n    {\n      label: \"Quit\",\n      accelerator: \"CmdOrCtrl+Q\",\n      click: () => {\n        app.quit();\n      }\n    }\n  ]\n};\n","export const editMenuTemplate = {\n  label: \"Edit\",\n  submenu: [\n    { label: \"Undo\", accelerator: \"CmdOrCtrl+Z\", selector: \"undo:\" },\n    { label: \"Redo\", accelerator: \"Shift+CmdOrCtrl+Z\", selector: \"redo:\" },\n    { type: \"separator\" },\n    { label: \"Cut\", accelerator: \"CmdOrCtrl+X\", selector: \"cut:\" },\n    { label: \"Copy\", accelerator: \"CmdOrCtrl+C\", selector: \"copy:\" },\n    { label: \"Paste\", accelerator: \"CmdOrCtrl+V\", selector: \"paste:\" },\n    { label: \"Select All\", accelerator: \"CmdOrCtrl+A\", selector: \"selectAll:\" }\n  ]\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs-jetpack\");","// This helper remembers the size and position of your windows (and restores\n// them in that place after app relaunch).\n// Can be used for more than one window, just construct many\n// instances of it and give each different name.\n\nimport { app, BrowserWindow, screen } from \"electron\";\nimport jetpack from \"fs-jetpack\";\n\nexport default (name, options) => {\n  const userDataDir = jetpack.cwd(app.getPath(\"userData\"));\n  const stateStoreFile = `window-state-${name}.json`;\n  const {width, height} = screen.getPrimaryDisplay().workAreaSize\n  const defaultSize = {\n    width: width,\n    height: height\n  };\n  let state = {};\n  let win;\n\n  const restore = () => {\n    let restoredState = {};\n    try {\n      restoredState = userDataDir.read(stateStoreFile, \"json\");\n    } catch (err) {\n      // For some reason json can't be read (might be corrupted).\n      // No worries, we have defaults.\n    }\n    return Object.assign({}, defaultSize, restoredState);\n  };\n\n  const getCurrentPosition = () => {\n    const position = win.getPosition();\n    const size = win.getSize();\n    return {\n      x: position[0],\n      y: position[1],\n      width: size[0],\n      height: size[1]\n    };\n  };\n\n  const windowWithinBounds = (windowState, bounds) => {\n    return (\n      windowState.x >= bounds.x &&\n      windowState.y >= bounds.y &&\n      windowState.x + windowState.width <= bounds.x + bounds.width &&\n      windowState.y + windowState.height <= bounds.y + bounds.height\n    );\n  };\n\n  const resetToDefaults = () => {\n    const bounds = screen.getPrimaryDisplay().bounds;\n    return Object.assign({}, defaultSize, {\n      x: (bounds.width - defaultSize.width) / 2,\n      y: (bounds.height - defaultSize.height) / 2\n    });\n  };\n\n  const ensureVisibleOnSomeDisplay = windowState => {\n    const visible = screen.getAllDisplays().some(display => {\n      return windowWithinBounds(windowState, display.bounds);\n    });\n    if (!visible) {\n      // Window is partially or fully not visible now.\n      // Reset it to safe defaults.\n      return resetToDefaults();\n    }\n    return windowState;\n  };\n\n  const saveState = () => {\n    if (!win.isMinimized() && !win.isMaximized()) {\n      Object.assign(state, getCurrentPosition());\n    }\n    userDataDir.write(stateStoreFile, state, { atomic: true });\n  };\n\n  state = ensureVisibleOnSomeDisplay(restore());\n\n  win = new BrowserWindow(Object.assign({}, options, state));\n\n  win.on(\"close\", saveState);\n\n  return win;\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"env\");","// This is main process of Electron, started as first thing when your\n// app starts. It runs through entire life of your application.\n// It doesn't have any windows which you can see on screen, but we can open\n// window from here.\n\nimport path from \"path\";\nimport url from \"url\";\nimport { app, Menu } from \"electron\";\nimport { devMenuTemplate } from \"./menu/dev_menu_template\";\nimport { editMenuTemplate } from \"./menu/edit_menu_template\";\nimport createWindow from \"./helpers/window\";\n\n// Special module holding environment variables which you declared\n// in config/env_xxx.json file.\nimport env from \"env\";\n\nconst setApplicationMenu = () => {\n  const menus = [editMenuTemplate];\n  if (env.name !== \"production\") {\n    menus.push(devMenuTemplate);\n  }\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus));\n};\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== \"production\") {\n  const userDataPath = app.getPath(\"userData\");\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`);\n}\n\napp.on('certificate-error', (event, webContents, url, error, certificate, callback) => {\n    event.preventDefault()\n    callback(true)\n  });\n\napp.on(\"ready\", () => {\n  setApplicationMenu();\n\n  const mainWindow = createWindow(\"main\", {\n    width: 1000,\n    height: 600\n  });\n\n  mainWindow.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"app.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  );\n\n  if (env.name === \"development\") {\n    mainWindow.openDevTools();\n  }\n});\n\napp.on(\"window-all-closed\", () => {\n  app.quit();\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","require","devMenuTemplate","label","submenu","accelerator","click","BrowserWindow","webContents","reloadIgnoringCache","toggleDevTools","app","editMenuTemplate","selector","type","env","userDataPath","event","url","error","certificate","callback","preventDefault","menus","push","Menu","setApplicationMenu","mainWindow","name","options","userDataDir","jetpack","stateStoreFile","width","height","screen","workAreaSize","defaultSize","win","state","windowState","visible","some","display","bounds","x","y","windowWithinBounds","assign","resetToDefaults","ensureVisibleOnSomeDisplay","restoredState","read","err","restore","on","isMinimized","isMaximized","position","getPosition","size","getSize","getCurrentPosition","write","atomic","createWindow","loadURL","pathname","path","__dirname","protocol","slashes","openDevTools"],"sourceRoot":""}